/*
 * IPL Tracking - Microservice API
 * API description for Tracking microservice.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateDriverResponse
 */
@JsonPropertyOrder({
  CreateDriverResponse.JSON_PROPERTY_DRIVER_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-05T14:56:01.329586Z[Europe/Lisbon]")
public class CreateDriverResponse {
  public static final String JSON_PROPERTY_DRIVER_ID = "driverId";
  private String driverId;

  public CreateDriverResponse() {
  }

  public CreateDriverResponse driverId(String driverId) {
    
    this.driverId = driverId;
    return this;
  }

   /**
   * Get driverId
   * @return driverId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "0af401df-7d7a-1f36-817d-7b0a058d0003", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DRIVER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDriverId() {
    return driverId;
  }


  @JsonProperty(JSON_PROPERTY_DRIVER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDriverId(String driverId) {
    this.driverId = driverId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDriverResponse createDriverResponse = (CreateDriverResponse) o;
    return Objects.equals(this.driverId, createDriverResponse.driverId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(driverId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDriverResponse {\n");
    sb.append("    driverId: ").append(toIndentedString(driverId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

