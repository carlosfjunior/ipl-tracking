/*
 * IPL Tracking - Microservice API
 * API description for Tracking microservice.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.openapitools.client.model.EnumSensorType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GetSensorResponse
 */
@JsonPropertyOrder({
  GetSensorResponse.JSON_PROPERTY_SENSOR_ID,
  GetSensorResponse.JSON_PROPERTY_NAME,
  GetSensorResponse.JSON_PROPERTY_SENSOR_TYPE,
  GetSensorResponse.JSON_PROPERTY_MIN_VALUE,
  GetSensorResponse.JSON_PROPERTY_MAX_VALUE,
  GetSensorResponse.JSON_PROPERTY_UNIT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-05T14:56:00.970714Z[Europe/Lisbon]")
public class GetSensorResponse {
  public static final String JSON_PROPERTY_SENSOR_ID = "sensorId";
  private String sensorId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SENSOR_TYPE = "sensor_type";
  private EnumSensorType sensorType;

  public static final String JSON_PROPERTY_MIN_VALUE = "minValue";
  private BigDecimal minValue;

  public static final String JSON_PROPERTY_MAX_VALUE = "maxValue";
  private BigDecimal maxValue;

  public static final String JSON_PROPERTY_UNIT = "unit";
  private String unit;

  public GetSensorResponse() {
  }

  public GetSensorResponse sensorId(String sensorId) {
    
    this.sensorId = sensorId;
    return this;
  }

   /**
   * Get sensorId
   * @return sensorId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "0af401df-7d7a-1f36-817d-7b0a058d0003", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SENSOR_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSensorId() {
    return sensorId;
  }


  @JsonProperty(JSON_PROPERTY_SENSOR_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSensorId(String sensorId) {
    this.sensorId = sensorId;
  }


  public GetSensorResponse name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Complete Sensor name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Foo bar", required = true, value = "Complete Sensor name")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public GetSensorResponse sensorType(EnumSensorType sensorType) {
    
    this.sensorType = sensorType;
    return this;
  }

   /**
   * Get sensorType
   * @return sensorType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SENSOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EnumSensorType getSensorType() {
    return sensorType;
  }


  @JsonProperty(JSON_PROPERTY_SENSOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSensorType(EnumSensorType sensorType) {
    this.sensorType = sensorType;
  }


  public GetSensorResponse minValue(BigDecimal minValue) {
    
    this.minValue = minValue;
    return this;
  }

   /**
   * Min value allowed
   * @return minValue
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "0.0", required = true, value = "Min value allowed")
  @JsonProperty(JSON_PROPERTY_MIN_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getMinValue() {
    return minValue;
  }


  @JsonProperty(JSON_PROPERTY_MIN_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMinValue(BigDecimal minValue) {
    this.minValue = minValue;
  }


  public GetSensorResponse maxValue(BigDecimal maxValue) {
    
    this.maxValue = maxValue;
    return this;
  }

   /**
   * Max value allowed
   * @return maxValue
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "255.0", required = true, value = "Max value allowed")
  @JsonProperty(JSON_PROPERTY_MAX_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getMaxValue() {
    return maxValue;
  }


  @JsonProperty(JSON_PROPERTY_MAX_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMaxValue(BigDecimal maxValue) {
    this.maxValue = maxValue;
  }


  public GetSensorResponse unit(String unit) {
    
    this.unit = unit;
    return this;
  }

   /**
   * Unit
   * @return unit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Km/h", value = "Unit")
  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnit() {
    return unit;
  }


  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnit(String unit) {
    this.unit = unit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetSensorResponse getSensorResponse = (GetSensorResponse) o;
    return Objects.equals(this.sensorId, getSensorResponse.sensorId) &&
        Objects.equals(this.name, getSensorResponse.name) &&
        Objects.equals(this.sensorType, getSensorResponse.sensorType) &&
        Objects.equals(this.minValue, getSensorResponse.minValue) &&
        Objects.equals(this.maxValue, getSensorResponse.maxValue) &&
        Objects.equals(this.unit, getSensorResponse.unit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sensorId, name, sensorType, minValue, maxValue, unit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetSensorResponse {\n");
    sb.append("    sensorId: ").append(toIndentedString(sensorId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sensorType: ").append(toIndentedString(sensorType)).append("\n");
    sb.append("    minValue: ").append(toIndentedString(minValue)).append("\n");
    sb.append("    maxValue: ").append(toIndentedString(maxValue)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

