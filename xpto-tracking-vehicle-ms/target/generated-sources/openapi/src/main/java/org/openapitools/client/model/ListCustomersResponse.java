/*
 * IPL Tracking - Microservice API
 * API description for Tracking microservice.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.GetCustomerResponse;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * generic paged response
 */
@ApiModel(description = "generic paged response")
@JsonPropertyOrder({
  ListCustomersResponse.JSON_PROPERTY_CONTENT,
  ListCustomersResponse.JSON_PROPERTY_TOTAL_RESULTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-05T14:56:00.606499Z[Europe/Lisbon]")
public class ListCustomersResponse {
  public static final String JSON_PROPERTY_CONTENT = "content";
  private List<GetCustomerResponse> content = new ArrayList<>();

  public static final String JSON_PROPERTY_TOTAL_RESULTS = "totalResults";
  private Long totalResults;

  public ListCustomersResponse() {
  }

  public ListCustomersResponse content(List<GetCustomerResponse> content) {
    
    this.content = content;
    return this;
  }

  public ListCustomersResponse addContentItem(GetCustomerResponse contentItem) {
    this.content.add(contentItem);
    return this;
  }

   /**
   * list of paged items
   * @return content
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "list of paged items")
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<GetCustomerResponse> getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContent(List<GetCustomerResponse> content) {
    this.content = content;
  }


  public ListCustomersResponse totalResults(Long totalResults) {
    
    this.totalResults = totalResults;
    return this;
  }

   /**
   * total number of records
   * @return totalResults
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "50", required = true, value = "total number of records")
  @JsonProperty(JSON_PROPERTY_TOTAL_RESULTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTotalResults() {
    return totalResults;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_RESULTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalResults(Long totalResults) {
    this.totalResults = totalResults;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListCustomersResponse listCustomersResponse = (ListCustomersResponse) o;
    return Objects.equals(this.content, listCustomersResponse.content) &&
        Objects.equals(this.totalResults, listCustomersResponse.totalResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(content, totalResults);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListCustomersResponse {\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    totalResults: ").append(toIndentedString(totalResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

