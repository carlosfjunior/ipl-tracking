openapi: 3.0.3
info:
  description: API description for Tracking microservice.
  title: IPL Tracking - Microservice API
  version: 1.0.0
servers:
- description: Localhost - BT3 Dev
  url: http://localhost:8080/tracking
tags:
- description: Driver definition
  name: Driver
paths:
  /drivers:
    get:
      description: This operation is used to retrieve a list of Drivers.
      operationId: listDrivers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDriversResponse'
          description: Ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected errors not mapped to status codes mentioned above
      summary: Get Drivers list
      tags:
      - Driver
      x-accepts: application/json
    post:
      description: This operation is usedto create a new Driver on System.
      operationId: createDriver
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDriverRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDriverResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Parameters missing in request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There is already a driver registered with same name or mail
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected errors not mapped to status codes mentioned above
      summary: Create new Driver
      tags:
      - Driver
      x-content-type: application/json
      x-accepts: application/json
  /drivers/{driverId}:
    delete:
      description: This operation is delete a Driver.
      operationId: deleteDriver
      parameters:
      - description: Unique identifier of the Driver in the database
        example: 0af401df-7d7a-1f36-817d-7b0a058d0003
        explode: false
        in: path
        name: driverId
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Delete a driver that has vehicles is not allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected errors not mapped to status codes mentioned above
      summary: Delete Driver
      tags:
      - Driver
      x-accepts: application/json
    get:
      description: This operation is used to retrieve the details of a specific device.
      operationId: getDriver
      parameters:
      - description: Unique identifier of the Driver in the database
        example: 0af401df-7d7a-1f36-817d-7b0a058d0003
        explode: false
        in: path
        name: driverId
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDriverResponse'
          description: Ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected errors not mapped to status codes mentioned above
      summary: Get a single Driver's info
      tags:
      - Driver
      x-accepts: application/json
    patch:
      description: This operation is used to update some of the Driver's attributes.
      operationId: updateDriver
      parameters:
      - description: Unique identifier of the Driver in the database
        example: 0af401df-7d7a-1f36-817d-7b0a058d0003
        explode: false
        in: path
        name: driverId
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDriverRequest'
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Parameters missing in request or request is malformed. For\
            \ example, the mail is not in the correct format."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There is already a Driver registered with same name or email
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected errors not mapped to status codes mentioned above
      summary: Update Driver's attributes
      tags:
      - Driver
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    GetDriverResponse:
      example:
        driverId: 0af401df-7d7a-1f36-817d-7b0a058d0003
        mail: foo@bar.com
        phone: "351912000111"
        name: Foo bar
        customerId: 0af401df-7d7a-1f36-817d-7b0a058d0003
      properties:
        driverId:
          example: 0af401df-7d7a-1f36-817d-7b0a058d0003
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          type: string
        name:
          description: Complete Driver name
          example: Foo bar
          type: string
        customerId:
          example: 0af401df-7d7a-1f36-817d-7b0a058d0003
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          type: string
        phone:
          description: Telephone number
          example: "351912000111"
          type: string
        mail:
          description: E-mail address
          example: foo@bar.com
          format: email
          type: string
      required:
      - driverId
      - mail
      - name
      - phone
      type: object
    CreateDriverRequest:
      example:
        mail: foo@bar.com
        phone: "351912000111"
        name: Foo bar
        customerId: 0af401df-7d7a-1f36-817d-7b0a058d0003
      properties:
        name:
          description: Complete Driver name
          example: Foo bar
          type: string
        customerId:
          example: 0af401df-7d7a-1f36-817d-7b0a058d0003
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          type: string
        phone:
          description: Telephone number
          example: "351912000111"
          type: string
        mail:
          description: E-mail address
          example: foo@bar.com
          format: email
          type: string
      required:
      - mail
      - name
      - phone
      type: object
    CreateDriverResponse:
      example:
        driverId: 0af401df-7d7a-1f36-817d-7b0a058d0003
      properties:
        driverId:
          example: 0af401df-7d7a-1f36-817d-7b0a058d0003
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          type: string
      required:
      - driverId
      type: object
    ListDriversResponse:
      description: generic paged response
      example:
        totalResults: 50
        content:
        - driverId: 0af401df-7d7a-1f36-817d-7b0a058d0003
          mail: foo@bar.com
          phone: "351912000111"
          name: Foo bar
          customerId: 0af401df-7d7a-1f36-817d-7b0a058d0003
        - driverId: 0af401df-7d7a-1f36-817d-7b0a058d0003
          mail: foo@bar.com
          phone: "351912000111"
          name: Foo bar
          customerId: 0af401df-7d7a-1f36-817d-7b0a058d0003
      properties:
        content:
          description: list of paged items
          items:
            $ref: '#/components/schemas/GetDriverResponse'
          type: array
        totalResults:
          description: total number of records
          example: 50
          format: int64
          type: integer
      required:
      - content
      - totalResults
      type: object
    UpdateDriverRequest:
      example:
        mail: foo@bar.com
        phone: "351912000111"
        name: Foo bar
        customerId: 0af401df-7d7a-1f36-817d-7b0a058d0003
      properties:
        name:
          description: Complete Driver name
          example: Foo bar
          type: string
        customerId:
          example: 0af401df-7d7a-1f36-817d-7b0a058d0003
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          type: string
        phone:
          description: Telephone number
          example: "351912000111"
          type: string
        mail:
          description: E-mail address
          example: foo@bar.com
          format: email
          type: string
      type: object
    ErrorResponse:
      properties:
        code:
          description: Application error code
          example: XYZ0001
          type: string
        type:
          $ref: '#/components/schemas/ErrorTypeEnum'
        message:
          description: Short error explanation
          example: Unauthorized
          type: string
        details:
          description: Short error detail
          example: Parameter X has invalid value
          type: string
      required:
      - errorCode
      - errorMessage
      - errorType
      type: object
    ErrorTypeEnum:
      description: Error Type
      enum:
      - PERSISTENCE
      - BUSINESS
      - COMMUNICATION
      - UNKNOWN
      type: string
    UUID:
      example: 0af401df-7d7a-1f36-817d-7b0a058d0003
      pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      type: string
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http

